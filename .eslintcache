[{"C:\\Users\\compl\\OneDrive\\Documents\\MERN\\memories_project\\client\\src\\components\\Posts\\Posts.js":"1","C:\\Users\\compl\\OneDrive\\Documents\\MERN\\memories_project\\client\\src\\components\\Posts\\Post\\styles.js":"2","C:\\Users\\compl\\OneDrive\\Documents\\MERN\\memories_project\\client\\src\\index.js":"3","C:\\Users\\compl\\OneDrive\\Documents\\MERN\\memories_project\\client\\src\\components\\Posts\\Post\\Post.js":"4","C:\\Users\\compl\\OneDrive\\Documents\\MERN\\memories_project\\client\\src\\App.js":"5","C:\\Users\\compl\\OneDrive\\Documents\\MERN\\memories_project\\client\\src\\components\\Form\\Form.js":"6","C:\\Users\\compl\\OneDrive\\Documents\\MERN\\memories_project\\client\\src\\api\\index.js":"7","C:\\Users\\compl\\OneDrive\\Documents\\MERN\\memories_project\\client\\src\\actions\\posts.js":"8","C:\\Users\\compl\\OneDrive\\Documents\\MERN\\memories_project\\client\\src\\reducers\\posts.js":"9","C:\\Users\\compl\\OneDrive\\Documents\\MERN\\memories_project\\client\\src\\styles.js":"10","C:\\Users\\compl\\OneDrive\\Documents\\MERN\\memories_project\\client\\src\\constants\\actionTypes.js":"11","C:\\Users\\compl\\OneDrive\\Documents\\MERN\\memories_project\\client\\src\\reducers\\index.js":"12"},{"size":697,"mtime":1612738776647,"results":"13","hashOfConfig":"14"},{"size":937,"mtime":1612148062452,"results":"15","hashOfConfig":"14"},{"size":477,"mtime":1612737999167,"results":"16","hashOfConfig":"14"},{"size":1944,"mtime":1612747495782,"results":"17","hashOfConfig":"14"},{"size":1382,"mtime":1612747736748,"results":"18","hashOfConfig":"14"},{"size":2688,"mtime":1612747283346,"results":"19","hashOfConfig":"14"},{"size":445,"mtime":1612749845472,"results":"20","hashOfConfig":"14"},{"size":1190,"mtime":1612748290786,"results":"21","hashOfConfig":"14"},{"size":530,"mtime":1612748436204,"results":"22","hashOfConfig":"14"},{"size":455,"mtime":1612747818316,"results":"23","hashOfConfig":"14"},{"size":136,"mtime":1612748266578,"results":"24","hashOfConfig":"14"},{"size":127,"mtime":1612146586865,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jandgs",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\compl\\OneDrive\\Documents\\MERN\\memories_project\\client\\src\\components\\Posts\\Posts.js",[],"C:\\Users\\compl\\OneDrive\\Documents\\MERN\\memories_project\\client\\src\\components\\Posts\\Post\\styles.js",[],"C:\\Users\\compl\\OneDrive\\Documents\\MERN\\memories_project\\client\\src\\index.js",[],["54","55"],"C:\\Users\\compl\\OneDrive\\Documents\\MERN\\memories_project\\client\\src\\components\\Posts\\Post\\Post.js",[],"C:\\Users\\compl\\OneDrive\\Documents\\MERN\\memories_project\\client\\src\\App.js",[],"C:\\Users\\compl\\OneDrive\\Documents\\MERN\\memories_project\\client\\src\\components\\Form\\Form.js",["56"],"import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\r\nimport FileBase from \"react-file-base64\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport useStyles from \"./styles\";\r\nimport { createPost, updatePost } from \"../../actions/posts\";\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n\tconst [postData, setPostData] = useState({\r\n\t\tcreator: \"\",\r\n\t\ttitle: \"\",\r\n\t\tmessage: \"\",\r\n\t\ttags: \"\",\r\n\t\tselectedFile: \"\",\r\n\t});\r\n\tconst post = useSelector((state) => currentId ? state.posts.find(p => p._id == currentId) : null);\r\n\r\n\tconst classes = useStyles();\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (post) setPostData(post);\r\n\t}, [post]);\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (currentId) {\r\n\t\t\tdispatch(updatePost(currentId, postData));\r\n\t\t} else {\r\n\t\t\tdispatch(createPost(postData));\r\n\t\t}\r\n\r\n\t\tclear();\r\n\t}\r\n\r\n\tconst clear = () => {\r\n\t\tsetCurrentId(null);\r\n\t\tsetPostData({\r\n\t\t\tcreator: \"\",\r\n\t\t\ttitle: \"\",\r\n\t\t\tmessage: \"\",\r\n\t\t\ttags: \"\",\r\n\t\t\tselectedFile: \"\",\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Paper className={classes.paper}>\r\n\t\t\t<form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n\t\t\t\t<Typography variant=\"h6\">{currentId ? \"Editing\" : \"Creating\"} a Memory</Typography>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tname=\"creator\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tlabel=\"Creator\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tvalue={postData.creator}\r\n\t\t\t\t\tonChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tlabel=\"Title\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tvalue={postData.title}\r\n\t\t\t\t\tonChange={(e) => setPostData({ ...postData, title: e.target.value })} />\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tname=\"message\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tlabel=\"Message\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tvalue={postData.message}\r\n\t\t\t\t\tonChange={(e) => setPostData({ ...postData, message: e.target.value })} />\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tname=\"tags\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tlabel=\"Tags\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tvalue={postData.tags}\r\n\t\t\t\t\tonChange={(e) => setPostData({ ...postData, tags: e.target.value.split(\",\") })} />\r\n\t\t\t\t<div className={classes.fileInput}>\r\n\t\t\t\t\t<FileBase\r\n\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\tonDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n\t\t\t\t<Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n\t\t\t</form>\r\n\t\t</Paper>\r\n\t);\r\n}\r\n\r\nexport default Form;\r\n",["57","58"],"C:\\Users\\compl\\OneDrive\\Documents\\MERN\\memories_project\\client\\src\\api\\index.js",[],"C:\\Users\\compl\\OneDrive\\Documents\\MERN\\memories_project\\client\\src\\actions\\posts.js",[],"C:\\Users\\compl\\OneDrive\\Documents\\MERN\\memories_project\\client\\src\\reducers\\posts.js",["59","60"],"import { CREATE, DELETE, UPDATE, FETCH_ALL } from \"../constants/actionTypes\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (posts = [], action) => {\r\n\tswitch (action.type) {\r\n\t\tcase FETCH_ALL:\r\n\t\t\treturn action.payload;\r\n\t\tcase CREATE:\r\n\t\t\treturn [...posts, action.payload];\r\n\t\tcase UPDATE:\r\n\t\t\treturn posts.map((post) => post._id == action.payload._id ? action.payload : post)\r\n\t\tcase DELETE:\r\n\t\t\treturn posts.filter((post) => post._id != action.payload);\r\n\t\tdefault:\r\n\t\t\treturn posts;\r\n\t}\r\n}","C:\\Users\\compl\\OneDrive\\Documents\\MERN\\memories_project\\client\\src\\styles.js",[],"C:\\Users\\compl\\OneDrive\\Documents\\MERN\\memories_project\\client\\src\\constants\\actionTypes.js",[],"C:\\Users\\compl\\OneDrive\\Documents\\MERN\\memories_project\\client\\src\\reducers\\index.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":17,"column":78,"nodeType":"67","messageId":"68","endLine":17,"endColumn":80},{"ruleId":"61","replacedBy":"69"},{"ruleId":"63","replacedBy":"70"},{"ruleId":"65","severity":1,"message":"66","line":11,"column":40,"nodeType":"67","messageId":"68","endLine":11,"endColumn":42},{"ruleId":"65","severity":1,"message":"71","line":13,"column":43,"nodeType":"67","messageId":"68","endLine":13,"endColumn":45},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["72"],["73"],"Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]